{
  "overall_success": false,
  "total_modules": 2,
  "passed_modules": 1,
  "failed_modules": 1,
  "overall_duration": 79.99881482124329,
  "module_results": [
    {
      "module_id": "environment",
      "module_name": "环境配置测试",
      "success": false,
      "duration": 0.8352954387664795,
      "return_code": 1,
      "stdout": "开始环境测试...\n============================================================\n\n执行测试: 环境变量\n\n检查环境变量...\n[PASS] 环境变量 DASHSCOPE_API_KEY: 已配置\n[INFO] 环境变量 PYTHONPATH: 未配置（可选）\n[PASS] 环境变量 PATH: 已配置\n\n执行测试: Python依赖\n\n检查Python依赖包...\n[PASS] 依赖包 requests: 已安装\n[FAIL] 依赖包 python-dotenv: 未安装\n[PASS] 依赖包 langgraph: 已安装\n[PASS] 依赖包 langchain: 已安装\n[PASS] 依赖包 langchain_core: 已安装\n[INFO] 依赖包 fastapi: 未安装（可选）\n[PASS] 依赖包 uvicorn: 已安装\n[PASS] 依赖包 pydantic: 已安装\n\n执行测试: 项目结构\n\n检查项目结构...\n[PASS] 目录 src: 存在\n[PASS] 目录 src/services: 存在\n[PASS] 目录 src/models: 存在\n[PASS] 目录 src/routes: 存在\n[PASS] 目录 config: 存在\n[PASS] 目录 logs: 存在\n[PASS] 文件 main.py: 存在\n[PASS] 文件 config/config.py: 存在\n[PASS] 文件 src/services/llm_service.py: 存在\n[PASS] 文件 src/services/career_graph.py: 存在\n[PASS] 文件 src/services/career_nodes.py: 存在\n\n执行测试: 配置文件\n\n检查配置文件...\n[PASS] 配置文件 config/config.py: 存在\n[PASS] 配置文件 config/config.py: 语法正确\n[PASS] 配置文件 .env: 存在\n[PASS] 配置文件 .env: 包含API密钥\n\n执行测试: 写入权限\n\n检查写入权限...\n[PASS] 目录 logs: 写入权限正常\n[PASS] 目录 tests/results: 写入权限正常\n\n============================================================\n环境测试汇总\n============================================================\n总测试数: 5\n通过: 4\n失败: 1\n耗时: 0.57秒\n\n存在环境问题，请根据上述信息进行修复。\n\n详细错误信息:\n  - 缺少必需的依赖包: python-dotenv",
      "stderr": "",
      "timestamp": "2025-08-16T15:19:59.288544"
    },
    {
      "module_id": "llm_service",
      "module_name": "LLM服务测试",
      "success": true,
      "duration": 79.15956830978394,
      "return_code": 0,
      "stdout": "============================================================\n  CareerNavigator LLM服务测试（Windows兼容版）\n============================================================\n[INFO] 开始LLM服务测试...\n\nExecuting test: 模块导入\n\n[Testing] Module Import...\n[PASS] 模块导入: LLM服务模块导入成功\n   Details: 所有必要模块已成功导入\n\nExecuting test: API密钥配置\n\n[Testing] API Key Configuration...\n[PASS] API密钥配置: API密钥格式正确\n   Details: 已配置有效的API密钥\n\nExecuting test: API连接\n\n[Testing] API Connection...\n[PASS] API连接: API连接正常\n   Details: 响应时间: unknown秒\n\nExecuting test: 职业目标分析\n\n[Testing] Career Goal Analysis...\n[PASS] 目标分析_明确目标: 分析成功 - 明确度: False, 分数: 70\n   Details: 请求: 我想成为一名AI产品经理，专注于大模型产品设计和用户体验优化...\n[PASS] 目标分析_模糊目标: 分析成功 - 明确度: False, 分数: 45\n   Details: 请求: 我想换个工作，找个更好的发展机会...\n[PASS] 目标分析_技术转型: 分析成功 - 明确度: False, 分数: 65\n   Details: 请求: 我是软件工程师，想转向产品管理方向...\n\nExecuting test: 策略制定\n\n[Testing] Analysis Strategy Creation...\n[PASS] 策略制定: 策略制定成功\n   Details: 策略概述: 用户目前是一名拥有3年工作经验的软件工程师，具备Python、JavaScript和React等技术技能，且对人工智能和产品管理有浓厚兴趣，希望转向AI产品经理方向。此职业分析策略旨在结合用户的技术背...\n\nExecuting test: 用户画像分析\n\n[Testing] User Profile Analysis...\n[PASS] 用户画像分析: 用户画像分析成功\n   Details: 包含字段: ['strengths', 'weaknesses', 'personality_traits', 'skill_assessment', 'career_interests', 'development_potential', 'recommendations']\n\nExecuting test: MCP API模拟\n\n[Testing] MCP API Simulation...\n--- 外部API调用 ---\nAPI: industry_data, Params: {'target_industry': '互联网'}\n[PASS] MCP_行业数据: MCP 行业数据模拟成功\n   Details: 响应字段: ['search_results', 'data_sources']\n--- 外部API调用 ---\nAPI: job_market, Params: {'target_career': '产品经理'}\n[PASS] MCP_职位市场: MCP 职位市场模拟成功\n   Details: 响应字段: ['search_results', 'data_sources']\n\nExecuting test: 错误处理\n\n[Testing] Error Handling...\n[PASS] 错误处理: 错误处理正常\n   Details: LLM正确处理了无效输入并返回合理响应\n\n============================================================\n  测试结果汇总\n============================================================\nTotal Tests: 8\nPassed: 8\nFailed: 0\nDuration: 77.38s\n\nAll LLM service tests passed! Service is ready.",
      "stderr": "",
      "timestamp": "2025-08-16T15:21:18.450058"
    }
  ],
  "timestamp": "2025-08-16T15:21:18.450058"
}